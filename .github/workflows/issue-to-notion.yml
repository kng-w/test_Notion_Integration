# .github/workflows/issue-to-notion.yml

name: Sync GitHub Issues to Notion

on:
  issues:
    types: [opened, edited, closed, reopened]

jobs:
  sync-to-notion:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Node.js セットアップ部分を修正
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # cache行を削除またはコメントアウト
        # cache: 'npm'
    
    - name: Sync Issue to Notion
      env:
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      run: |
        cat > sync-script.js << 'EOF'
        
        const { Client } = require('@notionhq/client');
        
        const notion = new Client({ auth: process.env.NOTION_TOKEN });
        
        const databaseId = process.env.NOTION_DATABASE_ID;
        
        // GitHub コンテキスト取得方法を修正
        const fs = require('fs');
        const context = JSON.parse(fs.readFileSync(process.env.GITHUB_EVENT_PATH, 'utf8'));
        const issue = context.issue;
        const action = context.action;
        
        async function syncIssueToNotion() {
          try {
            const existingPages = await notion.databases.query({
              database_id: databaseId,
              filter: {
                property: 'Issue Number',
                number: {
                  equals: issue.number
                }
              }
            });
            
            const pageData = {
              'Title': {
                title: [
                  {
                    text: {
                      content: issue.title
                    }
                  }
                ]
              },
              
              'Issue Number': {
                number: issue.number
              },
              
              'Status': {
                select: {
                  name: issue.state === 'open' ? 'Open' : 'Closed'
                }
              },
              
              'Assignee': issue.assignee ? {
                rich_text: [
                  {
                    text: {
                      content: issue.assignee.login
                    }
                  }
                ]
              } : {
                rich_text: []
              },
              
              'Labels': {
                multi_select: issue.labels.map(label => ({
                  name: label.name
                }))
              },
              
              'Created At': {
                date: {
                  start: issue.created_at
                }
              },
              
              'Updated At': {
                date: {
                  start: issue.updated_at
                }
              },
              
              'URL': {
                url: issue.html_url
              },
              
              'Body': {
                rich_text: [
                  {
                    text: {
                      content: issue.body || ''
                    }
                  }
                ]
              }
            };
            
            if (existingPages.results.length > 0) {
              const pageId = existingPages.results[0].id;
              await notion.pages.update({
                page_id: pageId,
                properties: pageData
              });
              console.log(`Updated existing Notion page for issue #${issue.number}`);
              
            } else {
              await notion.pages.create({
                parent: { database_id: databaseId },
                properties: pageData
              });
              console.log(`Created new Notion page for issue #${issue.number}`);
            }
            
          } catch (error) {
            console.error('Error syncing to Notion:', error);
            process.exit(1);
          }
        }
        
        syncIssueToNotion();
        
        EOF
        
        # Node.js プロジェクトを初期化
        npm init -y
        
        # Notion API クライアントライブラリをインストール
        npm install @notionhq/client
        
        # 作成したJavaScriptファイルを実行
        node sync-script.js
